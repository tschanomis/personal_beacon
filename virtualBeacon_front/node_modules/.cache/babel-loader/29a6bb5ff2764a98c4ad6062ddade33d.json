{"ast":null,"code":"var _jsxFileName = \"/home/indien/personal_beacon/virtualBeacon_front/src/components/DashboardSearch.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './style/DashboardSearch.css';\n\nclass DashboardSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: '',\n      suggestions: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //this.getStations(this.state.coord[0], this.state.coord[1])\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        start: e.target.value\n      }, () => {\n        if (this.state.start.length >= 0) {\n          this.getAdress();\n        }\n      });\n    };\n\n    this.getAdress = () => {\n      axios.get('https://api-adresse.data.gouv.fr/search/', {\n        params: {\n          q: this.state.start,\n          limit: '5',\n          lat: 48.8534,\n          lon: 2.3488,\n          city: \"Paris\"\n        }\n      }).then(response => response.data.features).then(value => this.setState({\n        suggestions: value\n      }));\n    };\n\n    this.getStations = (lat, lon) => {\n      /*const zoom = this.state.zoom\n      axios.post('http://ec2-18-218-63-27.us-east-2.compute.amazonaws.com/api/places/position', {\n      \tlatitude: latitude,\n      \tlongitude: longitude,\n      \trayon: (18 - zoom) * 250\n      })\n      \t.then(response => this.setState({ items: response.data }))*/\n      this.props.getAddress(lat, lon);\n    };\n  }\n\n  suggestionsSelected(value) {\n    this.setState(() => ({\n      start: value.properties.label,\n      suggestions: [],\n      coord: value.geometry.coordinates\n    }));\n    const tabCoord = value.geometry.coordinates.reverse();\n    this.getStations(tabCoord[0], tabCoord[1]);\n    this.setState({\n      bool: true\n    });\n    this.setState({\n      start: value.properties.label\n    });\n  }\n\n  renderSugegestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }\n    }, suggestions.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.suggestionsSelected(item),\n      key: item.properties.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, item.properties.label)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DashboardSearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, \"RECHERCHE ADRESSE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AutoCompleteText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"AutoCompleteText-input\",\n      id: \"start\",\n      name: \"start\",\n      type: \"text\",\n      value: this.state.start,\n      onChange: this.handleChange,\n      placeholder: \"Adresse\",\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }), this.renderSugegestions())));\n  }\n\n}\n\nexport default DashboardSearch;","map":{"version":3,"sources":["/home/indien/personal_beacon/virtualBeacon_front/src/components/DashboardSearch.js"],"names":["React","axios","DashboardSearch","Component","state","start","suggestions","handleSubmit","e","preventDefault","handleChange","setState","target","value","length","getAdress","get","params","q","limit","lat","lon","city","then","response","data","features","getStations","props","getAddress","suggestionsSelected","properties","label","coord","geometry","coordinates","tabCoord","reverse","bool","renderSugegestions","map","item","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport './style/DashboardSearch.css';\n\nclass DashboardSearch extends React.Component {\n\n\tstate = {\n\t\tstart: '',\n\t\tsuggestions: [],\n\t}\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t//this.getStations(this.state.coord[0], this.state.coord[1])\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ start: e.target.value }, () => {\n\t\t\tif (this.state.start.length >= 0) {\n\t\t\t\tthis.getAdress();\n\t\t\t}\n\t\t})\n\t}\n\n\tgetAdress = () => {\n\t\taxios.get('https://api-adresse.data.gouv.fr/search/', {\n\t\t\tparams: {\n\t\t\t\tq: this.state.start,\n\t\t\t\tlimit: '5',\n\t\t\t\tlat: 48.8534,\n\t\t\t\tlon: 2.3488,\n\t\t\t\tcity: \"Paris\",\n\t\t\t},\n\t\t}).then(response => response.data.features)\n\t\t\t.then(value => this.setState({ suggestions: value }))\n\t}\n\n\tgetStations = (lat, lon) => {\n\t\t/*const zoom = this.state.zoom\n\t\taxios.post('http://ec2-18-218-63-27.us-east-2.compute.amazonaws.com/api/places/position', {\n\t\t\tlatitude: latitude,\n\t\t\tlongitude: longitude,\n\t\t\trayon: (18 - zoom) * 250\n\t\t})\n\t\t\t.then(response => this.setState({ items: response.data }))*/\n\t\tthis.props.getAddress(lat, lon)\n\t}\n\n\tsuggestionsSelected(value) {\n\t\tthis.setState(() => ({\n\t\t\tstart: value.properties.label,\n\t\t\tsuggestions: [],\n\t\t\tcoord: value.geometry.coordinates\n\t\t}))\n\t\tconst tabCoord = (value.geometry.coordinates.reverse())\n\t\tthis.getStations(tabCoord[0], tabCoord[1])\n\t\tthis.setState({ bool: true })\n\t\tthis.setState({ start: value.properties.label })\n\t}\n\n\trenderSugegestions() {\n\t\tconst { suggestions } = this.state\n\t\tif (suggestions.length === 0) {\n\t\t\treturn null\n\t\t}\n\t\treturn (\n\t\t\t<ul className=\"result\">\n\t\t\t\t{suggestions.map(item => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tonClick={() => this.suggestionsSelected(item)}\n\t\t\t\t\t\tkey={item.properties.label}\n\t\t\t\t\t>\n\t\t\t\t\t\t{item.properties.label}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"DashboardSearch\">\n\t\t\t\t<h5>RECHERCHE ADRESSE</h5>\n\t\t\t\t<div className=\"AutoCompleteText\">\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"AutoCompleteText-input\"\n\t\t\t\t\t\t\tid=\"start\"\n\t\t\t\t\t\t\tname=\"start\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.start}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tplaceholder=\"Adresse\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.renderSugegestions()}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DashboardSearch;\n"]},"metadata":{},"sourceType":"module"}